name: Java CI
on:
  push:
    paths:
      - "backend/**"
      - ".github/workflows/backend.build-test.yaml"
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  build:
    name: Build
    runs-on: [self-hosted]
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "corretto"
          cache: "gradle"

      - name: Run build
        run: ./gradlew build -x test
        working-directory: ./backend

      - name: Copy Jar file
        run: mv ./backend/build/libs/server.jar server.jar

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jar-file
          path: server.jar

  test:
    name: Test
    runs-on: [self-hosted]
    timeout-minutes: 30
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "corretto"
          cache: "gradle"

      - name: Run unit test
        # uni-testプロファイルはローカル環境でも使用しているので，datasource.urlのみを上書きする
        run: ./gradlew -Dspring.datasource.url=jdbc:postgresql://postgres-unit-test:5432/ems_db?useUnicode=true&characterEncoding=UTF-8&serverTimeZone=JST
        working-directory: ./backend

  build-image:
    name: Docker Image Build
    runs-on: [self-hosted]
    timeout-minutes: 30
    needs:
      - test

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: jar-file
          path: ./backend

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{secrets.GHCR_USER_NAME}}
          password: ${{secrets.GHCR_ACCESS_TOKEN}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/mktkhr/stamp-iot/java
          tags: |
            type=raw,value=latest
            type=sha,prefix=,suffix=,format=short

      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
