name: Node.js CI
on:
  push:
    paths:
      - "frontend/**"
      - ".github/workflows/frontend.build-test.yaml"
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  build:
    name: Build/Test
    runs-on: [self-hosted]
    timeout-minutes: 30

    strategy:
      matrix:
        node-version: [20.15.1]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
          cache-dependency-path: ./frontend/yarn.lock

      - name: Install packages
        run: |
          npm install -g yarn
          yarn
        working-directory: ./frontend

      - name: Run build
        run: yarn build:prod
        working-directory: ./frontend

      - name: Run unit test
        run: yarn test:unit
        working-directory: ./frontend

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            ./frontend/dist
            !./frontend/dist/**/*.md

  build-image:
    name: Docker image build
    runs-on: [self-hosted]
    timeout-minutes: 30
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./frontend/dist

      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{secrets.GHCR_USER_NAME}}
          password: ${{secrets.GHCR_ACCESS_TOKEN}}

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/mktkhr/stamp-iot/nginx
          tags: |
            type=raw,value=latest
            type=sha,prefix=,suffix=,format=short

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
