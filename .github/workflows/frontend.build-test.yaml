name: Node.js CI
on:
  pull_request:
    paths:
      - "frontend/**"
      - ".github/workflows/frontend.build-test.yaml"
      - ".github/workflows/composite/frontend**/**"

jobs:
  build:
    name: Build/Test
    runs-on: [self-hosted]
    timeout-minutes: 30

    strategy:
      matrix:
        node-version: [20.15.1]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install packages
        uses: ./.github/workflows/composite/frontend-setup

      - name: Run build
        run: yarn build:prod
        working-directory: ./frontend

      - name: Run unit test
        run: yarn test:unit
        working-directory: ./frontend

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            ./frontend/dist
            !./frontend/dist/**/*.md

  build-image:
    name: Docker image build
    runs-on: [self-hosted]
    timeout-minutes: 30
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: ./frontend/dist

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{secrets.GHCR_USER_NAME}}
          password: ${{secrets.GHCR_ACCESS_TOKEN}}

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta-dev
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/mktkhr/stamp-iot/nginx
          tags: |
            type=raw,value=latest
            type=sha,prefix=,suffix=,format=short

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ steps.meta-dev.outputs.tags }}
          platforms: linux/amd64,linux/arm64

  screenshot-main:
    name: Take Expected Screenshots At Main Branch
    runs-on: [self-hosted]
    timeout-minutes: 30
    needs: build

    strategy:
      matrix:
        node-version: [20.15.1]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      # スクリーンショットのキャッシュの有無を評価する
      - name: Restore cached expected screenshots
        id: expected_screenshots_cache
        uses: ./.github/workflows/composite/frontend-cache-screenshot

      # 以下はキャッシュが存在しなかった場合に実行される
      - name: Use Node.js ${{ matrix.node-version }}
        uses: ./.github/workflows/composite/frontend-setup

      - name: Restore or build storybook # キャッシュにスクショが保存されてなかったらStorybookをビルドしてスクショ撮影する
        if: ${{ steps.expected_screenshots_cache.outputs.cache-hit != 'true'}}
        uses: ./.github/workflows/composite/frontend-cache-storybook-static

      - name: Install Chrome for puppeteer
        if: ${{ steps.expected_screenshots_cache.outputs.cache-hit != 'true'}}
        run: echo "${{ secrets.EMS_PASS }}" | sudo -S apt-get install -y libnss3 libatk1.0-0 libatk-bridge2.0-0 libcups2-dev libdrm-dev libxkbcommon-x11-0 libxcomposite-dev libxdamage1 libxrandr2 libgbm-dev libpangocairo-1.0-0 libasound2

      - name: Install Chrome for Puppeteer
        run: npx puppeteer browsers install chrome

      - name: Take expected screenshots
        if: ${{ steps.expected_screenshots_cache.outputs.cache-hit != 'true'}}
        run: yarn storycap:ci
        working-directory: ./frontend

      - name: Upload expected screenshots to artifact
        uses: actions/upload-artifact@v4

        with:
          name: expected-screenshots
          path: ./frontend/__screenshots__
          retention-days: 30

  screenshot-feature:
    name: Take Actual Screenshots At Feature Branch
    runs-on: [self-hosted]
    timeout-minutes: 30
    needs:
      - build
      - screenshot-main

    strategy:
      matrix:
        node-version: [20.15.1]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: ./.github/workflows/composite/frontend-setup

      - name: Workaround for detached HEAD
        run: |
          git checkout ${GITHUB_HEAD_REF#refs/heads/} || git checkout -b ${GITHUB_HEAD_REF#refs/heads/} && git pull

      - name: Build Storybook
        run: yarn build-storybook
        working-directory: ./frontend

      - name: Install Chrome for puppeteer
        run: echo "${{ secrets.EMS_PASS }}" | sudo -S apt-get install -y libnss3 libatk1.0-0 libatk-bridge2.0-0 libcups2-dev libdrm-dev libxkbcommon-x11-0 libxcomposite-dev libxdamage1 libxrandr2 libgbm-dev libpangocairo-1.0-0 libasound2

      - name: Install Chrome for Puppeteer
        run: npx puppeteer browsers install chrome

      - name: Take actual screenshots
        run: yarn storycap:ci
        working-directory: ./frontend

      - name: Upload actual screenshots to artifact
        uses: actions/upload-artifact@v4
        with:
          name: actual-screenshots
          path: ./frontend/__screenshots__
          retention-days: 5

  compare_screenshots:
    name: Compare Screenshots
    needs:
      - screenshot-main
      - screenshot-feature
    runs-on: [self-hosted]
    timeout-minutes: 30

    strategy:
      matrix:
        node-version: [20.15.1]

    # GitHub Pages デプロイ用
    permissions:
      pages: write
      id-token: write
      pull-requests: write

    steps:
      - name: Check out code
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check out PR
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: ./.github/workflows/composite/frontend-setup

      - name: Download expected screenshots from artifact
        uses: actions/download-artifact@v4
        with:
          name: expected-screenshots
          path: ./frontend/__screenshots__/before

      - name: Download actual screenshots from artifact
        uses: actions/download-artifact@v4
        with:
          name: actual-screenshots
          path: ./frontend/__screenshots__/after

      - name: Workaround for detached HEAD
        run: git checkout ${GITHUB_HEAD_REF#refs/heads/} || git checkout -b ${GITHUB_HEAD_REF#refs/heads/} && git pull

      - name: Compare Screenshots
        run: yarn vrt
        working-directory: ./frontend

      - name: Upload reg-cli Report
        uses: actions/upload-artifact@v4
        with:
          name: reg-cli-report
          path: ./frontend/__screenshots__
          retention-days: 1

      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./frontend/__screenshots__

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Find comment
        uses: peter-evans/find-comment@v3
        id: find_comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          direction: first

      - name: Comment VRT report URL
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.find_comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            reg-suit report
            ${{ steps.deployment.outputs.page_url}}
          edit-mode: replace

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
